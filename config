##################
# BUILD SPECIFIC #
##################

# define the image name
IMAGE_NAME=nuvlabox-os-base


# make sure all the necessary stages are included,
# and ordered by execution, from first to be executed to last
#
# Please separate the different stages with a white space
# IMPORTANT: _bootstrap is mandatory for the NuvlaBox OS
STAGE_BUNDLES="_bootstrap"


# select the desired architecture
ARCHITECTURE=amd64


# change reported architecture in new bootstraped environment
# it needs to be compatible with:
#
#     setarch --list
SETARCH_ARCHITECTURE=linux64


# Debian release to be used
RELEASE=buster


# DEBIAN mirror
MIRROR=https://deb.debian.org/debian/


# additional arguments for qemu-debootstrap if needed
#DBOOTSTRAP_EXTRA_ARGS=""


###########
# GENERIC #
###########

# hostname for the resulting OS
TARGET_HOSTNAME=nuvlabox-os

# where to build the new image
WORKDIR="$(pwd)/output/$(date +'%Y%m%d_%H%M%S')/${IMAGE_NAME}"


# path to log file where to keep track of the build progress
LOG_FILE="${WORKDIR}/output.log"


# where to mount the new filesystem (in case you are using debootstrap)
ROOTFS="${WORKDIR}/rootfs"


# in development mode, a default user shall be created
# default is 0 (false)
#
# default user:pass is -> sixsq:nuvlabox
DEVELOPMENT=0


# dbootstrap creates a full filesystem, which means it's suited for Live images
# in case we need an installer, to flash an hard drive, then we don't use debootstrap
# the current available OS build methods are:
#    - debootstrap
#    - simple-cdd
# default is debootstrap
#BUILD_WITH=debootstrap
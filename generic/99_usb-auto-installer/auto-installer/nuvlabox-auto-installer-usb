#!/bin/sh -x

trigger_file="nuvlabox-installation-trigger-usb.nuvla"
nuvlabox_local_dir="/opt/nuvlabox"

log() {
  # logging wrapper
  # $1 is the custom log message
  # $2 is a wall message sent to all logged users

  echo "NuvlaBox USB auto-installer: ${1}"
  logger "NuvlaBox USB auto-installer: ${1}"

  if [ ! -z "${2}" ]
  then
    wall "${2}"
  fi
}


download_nuvlabox_installer() {
  # fetches the latest NuvlaBox installer script from upstream
  # $1 is the download URL for the installation script
  # $2 is the path where to store the installer

  url="${1}"
  store_at="${2}"

  log "downloading latest NuvlaBox installer from upstream at ${url}"

  wget --no-check-certificate "${url}" -O "${store_at}"
}


install_nuvlabox() {
  # $1 is the USB drive mountpoint where we should look for the Nuvla user credentials
  media_mountpoint="${1}"

  # once mount is populated, we need to look for the Nuvla credentials
  existing_trigger_files=$(find "${media_mountpoint}/" -name "${trigger_file}")

  # if there's no trigger file, just exit and do nothing
  [ -z "${existing_trigger_files}" ] && log "${trigger_file} not found. Do nothing" && exit 0

  # in case there is more than one trigger file
  # DEFAULTS
  found_trigger_file=${existing_trigger_files}
  trigger_file_timestamp=0
  for tf in ${existing_trigger_files}
  do
    trigger_file_timestamp_new=$(stat "${tf}" --printf=%Y)

    if [ ${trigger_file_timestamp_new} -gt ${trigger_file_timestamp} ]
    then
      # we choose the most recent trigger file
      found_trigger_file="${tf}"
      trigger_file_timestamp=${trigger_file_timestamp_new}
    fi
  done

  trigger_file_content=$(cat ${found_trigger_file})
  log "found ${found_trigger_file}. Auto-installing NuvlaBox..." \
      "NuvlaBox Auto-installer starting... check progress at /var/log/messages"

  nuvlabox_installer_file="/tmp/nuvlabox.installer.$(date +'%s')"
  download_nuvlabox_installer "$(echo ${trigger_file_content} | jq -r .script)" "${nuvlabox_installer_file}"

  if [ $? -ne 0 ]
  then
    log "ERR: unable to download NuvlaBox installer $(echo ${trigger_file_content} | jq -r .script)"
    exit 1
  fi

  chmod +x "${nuvlabox_installer_file}"
  log "launching NuvlaBox installer ${nuvlabox_installer_file} ..." "Creating new NuvlaBox, from ${found_trigger_file}"

  nuvlabox-auto-installer-feedback START

  "${nuvlabox_installer_file}" --nuvlabox-installation-trigger-json "${trigger_file_content}" \
                               --nuvlabox-installation-dir "${nuvlabox_local_dir}/installation"

  if [ $? -eq 0 ]
  then
    log "NuvlaBox Engine successfully installed" "NuvlaBox Auto-installer succeeded - NuvlaBox Engine successfully installed"
    nuvlabox-auto-installer-feedback SUCCESS
  else
    log "Failed to install NuvlaBox with ${trigger_file_content}" "NuvlaBox Auto-installer failed"
    nuvlabox-auto-installer-feedback ERROR
    exit 1
  fi
}


try_install_nuvlabox() {
  # $1 is the block device name
  block_device="${1}"

  # 60 seconds max to let the system auto mount the USB drive, otherwise give up
  log "waiting for USB drive mountpoint on ${block_device}"
  mountpoint=$(lsblk "${block_device}" -n -o MOUNTPOINT)

  tries=0
  while [ -z "${mountpoint}" ]
  do
    tries=$((tries+1))
    if [ $tries -gt 30 ]
    then
      log "timeout waiting for mountpoint on ${block_device}. Nothing to do" && exit 0
    fi
    sleep 2

    mountpoint=$(lsblk "${block_device}" -n -o MOUNTPOINT)
  done

  log "found USB drive mountpoint ${mountpoint} - checking if files are mounted and if ${trigger_file} is present"

  export mountpoint
  timeout 30 sh -c -- 'while [ -z "${files}" ]
  do
    files=$(ls "${mountpoint}")
    sleep 1
  done'

  if [ $? -ne 0 ]
  then
    log "timeout waiting for mountpoint files at ${mountpoint}. Nothing to do"
    exit 0
  fi

  install_nuvlabox "${mountpoint}"
}


local_trigger_file="${nuvlabox_local_dir}/${trigger_file}"
if [ -f "${local_trigger_file}" ]; then
  log "Install NuvlaBox Engine from local trigger file"
  docker swarm init || true
  install_nuvlabox "${nuvlabox_local_dir}" \
  && rm -f "${local_trigger_file}"
fi

pipefail=$(date +%s)

mkfifo ${pipefail}
inotifywait -m -q /dev/block/ -e CREATE > ${pipefail} &
while read path event name
do
  block_name="${path}${name}"

  device_info=$(udevadm info -q property "${block_name}")
  echo ${device_info} | grep -q -E 'DEVTYPE=partition.*SUBSYSTEM=block.*ID_BUS=usb.*ID_FS_TYPE=.*ID_FS_USAGE='

  if [ $? -eq 0 ]
  then
    # This means that this is a partition, from a block device, from a USB drive, and has a mountable filesystem
    # and in that case, it can have a mounted partition in the system
    log "found mountable USB drive ${block_name} - checking for ${trigger_file} file"
    try_install_nuvlabox "${block_name}" &

  fi
done < ${pipefail}
